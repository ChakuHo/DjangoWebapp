"""
Django settings for marketplace project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vawpkok608o7-1$(q@hm!)m2uyp8$s7zgc=q=-pw(bi6mq@!jc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products.apps.ProductsConfig',
    'blog.apps.BlogConfig',
    'pages.apps.PagesConfig',
    'sitesetting.apps.SitesettingConfig',
    'cart.apps.CartConfig',
    'users.apps.UsersConfig',
    'orders.apps.OrdersConfig',
    'banners.apps.BannersConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'marketplace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], #this needs to be added to point to the templates directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sitesetting.context_processors.site_settings',
                'pages.context_processors.all_pages',
                'products.context_processor.categories',
                'cart.context_processor.counter',
                'banners.context_processors.active_banners',
            ],
        },
    },
]

WSGI_APPLICATION = 'marketplace.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Media Urls(static files js, css, images)

MEDIA_URL = '/media/' # URL path to access media files in browser
MEDIA_ROOT = BASE_DIR / 'media' # Where files are physically stored on disk

# media files that user uploads of products

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#yoo add gareko ho to use WhiteNoise for serving static files in production plus deploy garne ko step ho yo ni
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Directory where static files will be collected/destination for static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'  # Use WhiteNoise for static files storage


# Session settings - cart will persist for 3 days
SESSION_COOKIE_AGE = 259200  # 3 days in seconds (3 * 24 * 60 * 60)
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

from django.contrib.messages import constants as messages

MESSAGE_TAGS={
    messages.DEBUG: 'secondary',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger', #maps "error" Bootstrap red
}

# Payment Gateway Settings - REAL eSewa Test Environment
# eSewa Settings (same as teacher's)
ESEWA_PRODUCT_CODE = "EPAYTEST"
ESEWA_SECRET_KEY = "8gBm/:&EnhH.1/q"
ESEWA_FORM_URL = "https://rc-epay.esewa.com.np/api/epay/main/v2/form"

ESEWA_SETTINGS = {
    'PRODUCT_CODE': ESEWA_PRODUCT_CODE,
    'SECRET_KEY': ESEWA_SECRET_KEY,
    'FORM_URL': ESEWA_FORM_URL,
    'SUCCESS_URL': 'http://127.0.0.1:8000/orders/esewa-return/',
    'FAILURE_URL': 'http://127.0.0.1:8000/orders/esewa-return/',
}

# Keep your Khalti settings as they are
KHALTI_SETTINGS = {
    'PUBLIC_KEY': 'test_public_key_dc74e0fd6c3048ba9b7563ab772cf808',
    'SECRET_KEY': 'test_secret_key_f59e8b7c18b4499ca35f68bcb7c6b9bb',
    'API_URL': 'https://a.khalti.com/api/v2/',
}

PAYMENT_TESTING_MODE = True
DEFAULT_FROM_EMAIL = 'noreply@marketplace.com'

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# For TESTING - emails will show in Django console (no real emails sent)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Real email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'get4prajit@gmail.com'  
EMAIL_HOST_PASSWORD = 'nkty rpwb cbsh eerh'  
DEFAULT_FROM_EMAIL = 'ISLINGTON MARKETPLACE <islingtonmarketplace@gmail.com>'  # What customers see as sender
# Email settings explanation:
# EMAIL_BACKEND: Which method Django uses to send emails
# EMAIL_HOST: Gmail's SMTP server address
# EMAIL_PORT: Port number for Gmail SMTP (587 for TLS)
# EMAIL_USE_TLS: Enable secure connection
# EMAIL_HOST_USER: Your Gmail address
# EMAIL_HOST_PASSWORD: Special app password (NOT your Gmail password)
# DEFAULT_FROM_EMAIL: What recipients see as sender

# Email timeout settings (optional)
EMAIL_TIMEOUT = 60


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}